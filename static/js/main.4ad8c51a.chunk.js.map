{"version":3,"sources":["firebase-config.js","views/Sign.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","GlobalStyle","createGlobalStyle","FormStyle","s","form","Label","input","label","Button","button","H3","h3","Sign","formik","useFormik","initialValues","email","password","onSubmit","auth","createUserWithEmailAndPassword","then","console","log","catch","error","alert","handleSubmit","htmlFor","id","type","name","onChange","handleChange","value","values","component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAAaA,EAAiB,CAC5BC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,4DACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gB,OCAjBC,IAASC,cAAcV,GAGvB,IAAMW,EAAcC,YAAH,wGAOXC,EAAYC,IAAEC,KAAL,yQAmBTC,GAPQF,IAAEG,MAAL,8IAOGH,IAAEI,MAAL,iIAMLC,EAASL,IAAEM,OAAL,uOAWNC,EAAKP,IAAEQ,GAAL,yDAIKC,EAAO,WAClB,IAAMC,EAASC,YAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAU,YAA0B,IAAvBF,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClBnB,IACGqB,OACAC,+BAA+BJ,EAAOC,GACtCI,KAAKC,QAAQC,IAAI,OACjBC,OAAM,SAACC,GAAD,OAAWC,MAAMD,SAI9B,OACE,cAAC,IAAD,UACE,eAACvB,EAAD,CAAWgB,SAAUL,EAAOc,aAA5B,UACE,cAAC3B,EAAD,IACA,cAACU,EAAD,qBACA,cAACL,EAAD,CAAOuB,QAAQ,QAAf,qBACA,cAAC,IAAD,CACEC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOsB,OAAOnB,OAAS,KAEhC,cAAC,IAAD,CAAce,KAAK,QAAQK,UAAU,QACrC,cAAC/B,EAAD,CAAOuB,QAAQ,WAAf,uBACA,cAAC,IAAD,CACEC,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOsB,OAAOlB,UAAY,KAEnC,cAAC,IAAD,CAAcc,KAAK,WAAWK,UAAU,QACxC,cAAC5B,EAAD,CAAQsB,KAAK,SAAb,oBACA,cAACzB,EAAD,CAAOuB,QAAQ,SAAf,oCACA,cAACpB,EAAD,CAAQsB,KAAK,GAAGC,KAAK,SAArB,2BCrFOM,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4ad8c51a.chunk.js","sourcesContent":["export const firebaseConfig = {\r\n  apiKey: \"AIzaSyDqv3OeNullRLu9VNfkMBf94jyOFSuMxEo\",\r\n  authDomain: \"react-project01-f59aa.firebaseapp.com\",\r\n  databaseURL: \"https://react-project01-f59aa-default-rtdb.firebaseio.com\",\r\n  projectId: \"react-project01-f59aa\",\r\n  storageBucket: \"react-project01-f59aa.appspot.com\",\r\n  messagingSenderId: \"283572238548\",\r\n  appId: \"1:283572238548:web:c9b58ace1b10546327e341\",\r\n  measurementId: \"G-46HJC8Q3NT\"\r\n};\r\n\r\n  export const DATABASE_URL = firebaseConfig.databaseURL;","// import { Link, useHistory } from 'react-router-dom';\r\nimport '../App.css';\r\nimport s from 'styled-components';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { Formik, Form, Field, ErrorMessage, useFormik } from 'formik';\r\nimport firebase from \"firebase\";\r\nimport { firebaseConfig } from '../firebase-config';\r\nimport { useState } from 'react';\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: #F5F5F5;\r\n    box-sizing: border-box;\r\n  }\r\n`\r\n\r\nconst FormStyle = s.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 30%;\r\n  align-items: center;\r\n  margin: 50px auto;\r\n  padding: 50px 70px 70px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\r\n  background-color: palevioletred;\r\n`;\r\n\r\nconst Input = s.input`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 50%;\r\n  margin: 10px 0px 15px 0px;\r\n`\r\nconst Label = s.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 15px 0px 10px 0px;\r\n`\r\nconst Button = s.button`\r\n  margin: 10px 0px;\r\n  width: 177px;\r\n  height: 30px;\r\n  background-color: #000184;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\r\n  color: lightgrey;\r\n  border: solid 1px #000184;\r\n`;\r\n\r\nconst H3 = s.h3`\r\n  margin: 20px 0px 0px 0px;\r\n`;\r\n\r\nexport const Sign = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: ({ email, password }) => {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(console.log(\"ok\"))\r\n        .catch((error) => alert(error));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Formik>\r\n      <FormStyle onSubmit={formik.handleSubmit}>\r\n        <GlobalStyle />\r\n        <H3>Log in</H3>\r\n        <Label htmlFor=\"email\">E-mail:</Label>\r\n        <Field\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email || \"\"}\r\n        />\r\n        <ErrorMessage name=\"email\" component=\"div\" />\r\n        <Label htmlFor=\"password\">Password:</Label>\r\n        <Field\r\n          id=\"password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.password || \"\"}\r\n        />\r\n        <ErrorMessage name=\"password\" component=\"div\" />\r\n        <Button type=\"submit\">Log in</Button>\r\n        <Label htmlFor=\"signUp\">Don't have an account?</Label>\r\n        <Button type=\"\" name=\"signUp\">Sign up</Button>\r\n      </FormStyle>\r\n    </Formik>\r\n\r\n    // </FormStyle>\r\n  );\r\n};\r\n    // /* <h3>Log in</h3>\r\n    // <label htmlFor=\"email\">E-mail:</label>\r\n    // <Input\r\n    //   id=\"email\"\r\n    //   type=\"email\"\r\n    //   value={email}\r\n    //   name=\"email\"\r\n\r\n    //   required/>\r\n    // <Label htmlFor=\"password\">Password:</Label>\r\n    // <Input\r\n    //   id=\"password\"\r\n    //   type=\"password\"\r\n    //   value={password}\r\n    //   name=\"password\"\r\n    //   placeholder=\"Enter password\"\r\n    //   required/>\r\n    // error && <p className=\"error\">{error}</p>}\r\n    // <Button type=\"submit\">Log in</Button>\r\n    // <p>Don't have an account? <Link to=\"/sign-up\">Sign up</Link></p> ","\r\nimport './App.css';\r\nimport {Sign} from './views/Sign'\r\nimport {Basic} from './views/SignFormik'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Sign />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}